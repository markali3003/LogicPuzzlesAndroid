apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-allopen'
apply plugin: "kotlin-kapt"

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId "com.zwstudio.logicpuzzlesandroid"
        minSdkVersion 23
        targetSdkVersion 29
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    // http://stackoverflow.com/questions/4930398/can-the-android-layout-folder-contain-subfolders
    sourceSets.each {
        def rootResDir = it.res.srcDirs[0]
        def getSubDirs = { dirName ->
            def layoutsDir = new File(rootResDir, dirName)
            def subLayoutDirs = []
            if (layoutsDir.exists()) {
                layoutsDir.eachDir {
                    subLayoutDirs.add it
                }
            }
            return subLayoutDirs
        }
        def resDirs = [
            "anims",
            "colors",
            "drawables",
            "drawables-hdpi",
            "drawables-mdpi",
            "drawables-xhdpi",
            "drawables-xxhdpi",
            "layouts",
            "values",
        ]
        def srcDirs = resDirs.collect {
            getSubDirs(it)
        }
        it.res.srcDirs = [srcDirs, rootResDir]
    }
}

allOpen {
    annotation("org.androidannotations.api.KotlinOpen")
}

def AAVersion = '4.6.0'
dependencies {
    kapt "org.androidannotations:androidannotations:$AAVersion"
    implementation "org.androidannotations:androidannotations-api:$AAVersion"
    kapt "org.androidannotations:ormlite:$AAVersion"
    implementation "org.androidannotations:ormlite-api:$AAVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    implementation 'com.j256.ormlite:ormlite-core:4.48'
    implementation 'com.j256.ormlite:ormlite-android:4.48'
    implementation 'javax.persistence:persistence-api:1.0.2'
    implementation "org.functionaljava:functionaljava:4.7"
    implementation 'uk.com.robust-it:cloning:1.9.5'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
}
